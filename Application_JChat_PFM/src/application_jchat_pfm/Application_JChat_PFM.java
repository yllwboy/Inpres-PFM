/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application_jchat_pfm;

import ProtocolePFMCOP.ReponsePFMCOP;
import ProtocolePFMCOP.RequetePFMCOP;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.Socket;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Security;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.bouncycastle.util.Arrays;

/**
 *
 * @author hector
 */
public class Application_JChat_PFM extends javax.swing.JFrame {
    private MulticastSocket mSock = null;
    private InetAddress adresse;
    private int port;
    private ChatRefresher cr;
    /**
     * Creates new form Application_JChat_PFM
     */
    public Application_JChat_PFM() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TFAdresse = new javax.swing.JTextField();
        TFPort = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TFPass = new javax.swing.JTextField();
        TFUser = new javax.swing.JTextField();
        BDeconnexion = new javax.swing.JButton();
        BConnexion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        TFQuestion = new javax.swing.JTextField();
        BEnvoyer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TChat = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        TFReponse = new javax.swing.JTextField();
        BRepondre = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TAReponse = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Adresse :");

        jLabel2.setText("Port :");

        TFAdresse.setText("127.0.0.1");

        TFPort.setText("55000");

        jLabel4.setText("Nom :");

        jLabel5.setText("Mot de passe :");

        TFPass.setText("doe");

        TFUser.setText("john");

        BDeconnexion.setText("Déconnexion");
        BDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDeconnexionActionPerformed(evt);
            }
        });

        BConnexion.setText("Connexion");
        BConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BConnexionActionPerformed(evt);
            }
        });

        jLabel3.setText("Question :");

        BEnvoyer.setText("Envoyer");
        BEnvoyer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEnvoyerActionPerformed(evt);
            }
        });

        TChat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Identifiant", "Question"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TChat.setColumnSelectionAllowed(true);
        TChat.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TChat);
        TChat.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel6.setText("Réponse :");

        BRepondre.setText("Répondre à la question sélectionnée");
        BRepondre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BRepondreActionPerformed(evt);
            }
        });

        TAReponse.setColumns(20);
        TAReponse.setRows(5);
        jScrollPane1.setViewportView(TAReponse);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TFPort)
                            .addComponent(TFAdresse)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TFQuestion))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BRepondre, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(BConnexion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BDeconnexion))
                            .addComponent(BEnvoyer, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TFReponse))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TFUser)
                            .addComponent(TFPass))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TFAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TFPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TFUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TFPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BDeconnexion)
                    .addComponent(BConnexion))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(TFQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BEnvoyer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFReponse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BRepondre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BConnexionActionPerformed
        if(mSock != null)
            return;
        
        try {
            Socket loginSock = new Socket(TFAdresse.getText(), Integer.parseInt(TFPort.getText()));
            System.out.println(loginSock.getInetAddress().toString());
            
            String chargeUtile;
            String temps = Long.toString((new Date()).getTime());
            String alea = Double.toString(Math.random());
            byte[] msgD;

            String user = TFUser.getText(), password = TFPass.getText();

            System.out.println("Instanciation du message digest");
            Security.addProvider(new BouncyCastleProvider());
            MessageDigest md = MessageDigest.getInstance("SHA-1", RequetePFMCOP.codeProvider);
            md.update(user.getBytes());
            md.update(password.getBytes());
            md.update(temps.getBytes());
            md.update(alea.getBytes());

            msgD = md.digest();
            chargeUtile = user + "  " + temps + "  " + alea;
            
            ObjectOutputStream oos = new ObjectOutputStream(loginSock.getOutputStream());
            ObjectInputStream ois = new ObjectInputStream(loginSock.getInputStream());
            
            oos.writeObject(new RequetePFMCOP(RequetePFMCOP.LOGIN_GROUP, chargeUtile, msgD));
            oos.flush();
            
            ReponsePFMCOP rep = (ReponsePFMCOP)ois.readObject();
            
            if(rep.getCode() == ReponsePFMCOP.LOGIN_GROUP_OK) {
                String[] parser = rep.getChargeUtile().split("  ");
                    
                if(parser.length >= 2) {
                    adresse = InetAddress.getByName(parser[0]);
                    port = Integer.parseInt(parser[1]);
                    
                    System.out.println(adresse + " " + port);
                    
                    mSock = new MulticastSocket(port);
                    mSock.joinGroup(adresse);
                    
                    TAReponse.setText(" *** Reponse reçue : Connexion réussie = " + mSock.isConnected());
                    
                    cr = new ChatRefresher(mSock, (DefaultTableModel) TChat.getModel());
                    cr.start();
                }
            }
            else if(rep.getCode() == ReponsePFMCOP.WRONG_LOGIN)
                TAReponse.setText(" *** Reponse reçue : Nom d'utilisateur ou mot de passe erroné");
            else if(rep.getCode() == ReponsePFMCOP.ALREADY_LOGGED_IN)
                TAReponse.setText(" *** Reponse reçue : Vous êtes déjà connecté");
            else if(rep.getCode() == ReponsePFMCOP.INVALID_FORMAT)
                TAReponse.setText(" *** Reponse reçue : Le format de la commande est invalide");
            else if(rep.getCode() == ReponsePFMCOP.UNKNOWN_TYPE)
                TAReponse.setText(" *** Reponse reçue : La commande est inconnue");
            else if(rep.getCode() == ReponsePFMCOP.SERVER_FAIL)
                TAReponse.setText(" *** Reponse reçue : Erreur système du serveur");
            else
                TAReponse.setText(" *** Reponse reçue : " + rep.getChargeUtile());
            
            loginSock.close();
        }
        catch (ClassNotFoundException e) {
            TAReponse.setText("--- erreur sur la classe = " + e.getMessage());
        }
        catch (IOException e) {
            TAReponse.setText("--- erreur IO = " + e.getMessage());
        }
        catch (NoSuchAlgorithmException | NoSuchProviderException e) {
            TAReponse.setText("--- erreur cryptage = " + e.getMessage());
        }
    }//GEN-LAST:event_BConnexionActionPerformed

    private void BDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDeconnexionActionPerformed
        if(mSock == null)
            return;
        
        mSock.close();
        mSock = null;
        
        cr.interrupt();
    }//GEN-LAST:event_BDeconnexionActionPerformed

    private void BEnvoyerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEnvoyerActionPerformed
        //if(mSock == null)
        //    return;
        
        int bufLen = 256;
        byte[] buf;
        
        try {
            byte[] question = TFQuestion.getText().getBytes();
            
            System.out.println("Instanciation du message digest");
            Security.addProvider(new BouncyCastleProvider());
            MessageDigest md = MessageDigest.getInstance("SHA-1", RequetePFMCOP.codeProvider);
            md.update(question);

            byte[] msgD = md.digest();
            System.out.println("Taille du digest = " + msgD.length);
            
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte t = (byte) RequetePFMCOP.POST_QUESTION;
            baos.write(msgD);
            byte lq = (byte) question.length;
            baos.write(lq);
            baos.write(question);
            
            // envoi de la réponse
            if (baos.toByteArray().length > bufLen) {
                TAReponse.setText("Question trop grande pour l'envoi.");
                return;
            }
            buf = Arrays.copyOf(baos.toByteArray(), bufLen);
            System.out.println("Payload = " + new String(buf));
            System.out.println("Longueur envoyée = " + bufLen);
            mSock.send(new DatagramPacket(buf, bufLen, adresse, port));
            TAReponse.setText("Envoi réussi.");
        } catch (IOException ex) {
            TAReponse.setText("--- erreur IO = " + ex.getMessage());
        } catch (NoSuchAlgorithmException | NoSuchProviderException ex) {
            TAReponse.setText("--- erreur cryptage = " + ex.getMessage());
        }
    }//GEN-LAST:event_BEnvoyerActionPerformed

    private void BRepondreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BRepondreActionPerformed
        if(mSock == null)
            return;
    }//GEN-LAST:event_BRepondreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application_JChat_PFM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application_JChat_PFM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application_JChat_PFM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application_JChat_PFM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application_JChat_PFM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BConnexion;
    private javax.swing.JButton BDeconnexion;
    private javax.swing.JButton BEnvoyer;
    private javax.swing.JButton BRepondre;
    private javax.swing.JTextArea TAReponse;
    private javax.swing.JTable TChat;
    private javax.swing.JTextField TFAdresse;
    private javax.swing.JTextField TFPass;
    private javax.swing.JTextField TFPort;
    private javax.swing.JTextField TFQuestion;
    private javax.swing.JTextField TFReponse;
    private javax.swing.JTextField TFUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
