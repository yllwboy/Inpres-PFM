/*
 * Copyright (C) 2020 hector
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package application_mouvements;

import ProtocoleTRAMAP.*;
import java.io.*;
import java.net.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hector
 */
public class Application_Mouvements extends javax.swing.JFrame {

    private ObjectInputStream ois;
    private ObjectOutputStream oos;
    private Socket cliSock = null;
    
    /**
     * Creates new form Application_Mouvements
     */
    public Application_Mouvements() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BGRequete = new javax.swing.ButtonGroup();
        BGRecherche = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TFAdresse = new javax.swing.JTextField();
        TFPort = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TFUser = new javax.swing.JTextField();
        TFPass = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        BConnexion = new javax.swing.JButton();
        BDeconnexion = new javax.swing.JButton();
        BEnvoyer = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TAReponse = new javax.swing.JTextArea();
        TPOperations = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        TFReservation = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TFContainerA = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TFTransEntrant = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TFDateArrivee = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        TFPoids = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        TFDestination = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        TFContenu = new javax.swing.JTextField();
        TFCapacite = new javax.swing.JTextField();
        TFDangers = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        TFSociete = new javax.swing.JTextField();
        CBReservation = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        TFContainerD = new javax.swing.JTextField();
        TFTransSortant = new javax.swing.JTextField();
        TFDateDepart = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        RBSociete = new javax.swing.JRadioButton();
        RBDestination = new javax.swing.JRadioButton();
        TFDebutIntervalle = new javax.swing.JTextField();
        TFFinIntervalle = new javax.swing.JTextField();
        TFSocieteR = new javax.swing.JTextField();
        TFDestinationR = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TMouvements = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        TFNomSociete = new javax.swing.JTextField();
        TFIdSociete = new javax.swing.JTextField();
        TFEmailSociete = new javax.swing.JTextField();
        TFTelephoneSociete = new javax.swing.JTextField();
        TFAdresseSociete = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        TFIdTransporteur = new javax.swing.JTextField();
        TFSocieteTransporteur = new javax.swing.JTextField();
        TFCapaciteTransporteur = new javax.swing.JTextField();
        TFCaracTechTransporteur = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        TFIdDestination = new javax.swing.JTextField();
        TFVilleDestination = new javax.swing.JTextField();
        TFBateauDestination = new javax.swing.JTextField();
        TFTrainDestination = new javax.swing.JTextField();
        TFRouteDestination = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Adresse :");

        jLabel2.setText("Port :");

        TFAdresse.setText("127.0.0.1");

        TFPort.setText("52000");

        jLabel3.setText("Utilisateur :");

        TFUser.setText("Caligula");

        TFPass.setText("Néron");

        jLabel4.setText("Mot de passe :");

        BConnexion.setText("Connexion");
        BConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BConnexionActionPerformed(evt);
            }
        });

        BDeconnexion.setText("Déconnexion");
        BDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDeconnexionActionPerformed(evt);
            }
        });

        BEnvoyer.setText("Envoyer");
        BEnvoyer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEnvoyerActionPerformed(evt);
            }
        });

        jLabel13.setText("Réponse reçue :");

        TAReponse.setEditable(false);
        TAReponse.setColumns(20);
        TAReponse.setLineWrap(true);
        TAReponse.setRows(5);
        jScrollPane1.setViewportView(TAReponse);

        TFReservation.setText("1");

        jLabel6.setText("Container :");

        TFContainerA.setText("1");

        jLabel7.setText("Transporteur entrant :");

        TFTransEntrant.setText("KGB666");

        jLabel8.setText("Date d'arrivée :");

        TFDateArrivee.setText("2020-10-29");

        jLabel11.setText("Poids :");

        TFPoids.setText("15");

        jLabel12.setText("Destination :");

        TFDestination.setText("4000");

        jLabel9.setText("Nature du contenu :");

        jLabel10.setText("Capacité :");

        jLabel19.setText("Dangers :");

        TFContenu.setText("TNT");

        TFCapacite.setText("30");

        TFDangers.setText("Explosif");

        jLabel20.setText("Société :");

        TFSociete.setText("ACME");

        CBReservation.setText("Réservation :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(CBReservation))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TFReservation)
                            .addComponent(TFContainerA, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TFSociete)
                            .addComponent(TFDestination)
                            .addComponent(TFPoids)
                            .addComponent(TFDateArrivee, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                            .addComponent(TFTransEntrant)
                            .addComponent(TFDangers)
                            .addComponent(TFCapacite)
                            .addComponent(TFContenu))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFReservation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBReservation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(TFContainerA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(TFTransEntrant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(TFDateArrivee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(TFPoids, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(TFDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(TFContenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(TFCapacite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(TFDangers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(TFSociete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(290, Short.MAX_VALUE))
        );

        TPOperations.addTab("Arrivée d'un container", jPanel1);

        jLabel16.setText("Container :");

        jLabel17.setText("Transporteur sortant :");

        jLabel18.setText("Date de départ :");

        TFContainerD.setText("1");

        TFTransSortant.setText("KGB666");

        TFDateDepart.setText("2020-12-10");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TFTransSortant, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TFContainerD, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TFDateDepart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(TFContainerD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(TFTransSortant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(TFDateDepart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(458, Short.MAX_VALUE))
        );

        TPOperations.addTab("Départ d'un container", jPanel4);

        jLabel14.setText("Début de l'intervalle :");

        jLabel15.setText("Fin de l'intervalle :");

        BGRecherche.add(RBSociete);
        RBSociete.setSelected(true);
        RBSociete.setText("Société :");

        BGRecherche.add(RBDestination);
        RBDestination.setText("Destination :");

        TFDebutIntervalle.setText("1996-09-18");

        TFFinIntervalle.setText("2030-09-18");

        TFSocieteR.setText("ACME");

        TFDestinationR.setText("4000");

        TMouvements.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "container", "transEntrant", "dateArrivee", "transSortant", "dateDepart", "poids", "destination"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TMouvements);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(29, 29, 29)
                        .addComponent(TFFinIntervalle, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RBDestination)
                            .addComponent(RBSociete))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TFSocieteR)
                            .addComponent(TFDestinationR)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TFDebutIntervalle)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(TFDebutIntervalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(TFFinIntervalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RBSociete)
                    .addComponent(TFSocieteR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RBDestination)
                    .addComponent(TFDestinationR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addContainerGap())
        );

        TPOperations.addTab("Rechercher des mouvements", jPanel3);

        jLabel21.setText("Identifiant :");

        jLabel22.setText("Nom du contact :");

        jLabel23.setText("Email :");

        jLabel24.setText("Téléphone :");

        jLabel25.setText("Adresse :");

        TFNomSociete.setText("Hector");

        TFIdSociete.setText("MAERSK");

        TFEmailSociete.setText("hector@maersk.com");

        TFTelephoneSociete.setText("+32....");

        TFAdresseSociete.setText("Rue de la Mer 42");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel21)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TFIdSociete)
                    .addComponent(TFNomSociete)
                    .addComponent(TFEmailSociete)
                    .addComponent(TFTelephoneSociete)
                    .addComponent(TFAdresseSociete, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(TFIdSociete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(TFNomSociete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(TFEmailSociete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(TFTelephoneSociete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(TFAdresseSociete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(410, Short.MAX_VALUE))
        );

        TPOperations.addTab("Société", jPanel2);

        jLabel26.setText("Identifiant :");

        jLabel27.setText("Société :");

        jLabel28.setText("Capacité :");

        jLabel29.setText("Caractéristiques techniques :");

        TFIdTransporteur.setText("LUCK777");

        TFSocieteTransporteur.setText("HUAWEI");

        TFCapaciteTransporteur.setText("15");

        TFCaracTechTransporteur.setText("Jackpot");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(jLabel28)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TFIdTransporteur)
                    .addComponent(TFSocieteTransporteur)
                    .addComponent(TFCapaciteTransporteur)
                    .addComponent(TFCaracTechTransporteur, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(TFIdTransporteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(TFSocieteTransporteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(TFCapaciteTransporteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(TFCaracTechTransporteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(434, Short.MAX_VALUE))
        );

        TPOperations.addTab("Transporteur", jPanel5);

        jLabel30.setText("Identifiant :");

        jLabel31.setText("Ville :");

        jLabel32.setText("Distance par bateau :");

        jLabel33.setText("Distance par train :");

        jLabel34.setText("Distance par route :");

        TFIdDestination.setText("4020");

        TFVilleDestination.setText("Liège");

        TFBateauDestination.setText("40");

        TFTrainDestination.setText("30");

        TFRouteDestination.setText("20");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jLabel31)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TFIdDestination)
                    .addComponent(TFVilleDestination)
                    .addComponent(TFRouteDestination, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                    .addComponent(TFTrainDestination)
                    .addComponent(TFBateauDestination))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(TFIdDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(TFVilleDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(TFBateauDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(TFTrainDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(TFRouteDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(410, Short.MAX_VALUE))
        );

        TPOperations.addTab("Destination", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TFAdresse)
                            .addComponent(TFPort)
                            .addComponent(TFUser)
                            .addComponent(TFPass)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BConnexion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BDeconnexion))
                    .addComponent(TPOperations)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BEnvoyer)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TFAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BConnexion)
                    .addComponent(BDeconnexion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TPOperations, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BEnvoyer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BConnexionActionPerformed
        
        if(cliSock != null)
            return;
        
        String adresse = TFAdresse.getText();
        int port = Integer.parseInt(TFPort.getText());
        
        try {
            cliSock = new Socket(adresse, port);
            System.out.println(cliSock.getInetAddress().toString());
        }
        catch (UnknownHostException e) {
            TAReponse.setText("Erreur ! Host non trouvé [" + e + "]");
        }
        catch (IOException e) {
            TAReponse.setText("Erreur ! Pas de connexion ? [" + e + "]");
        }
        
        String chargeUtile = TFUser.getText() + "  " + TFPass.getText();
        RequeteTRAMAP req = new RequeteTRAMAP(RequeteTRAMAP.LOGIN, chargeUtile);
        
        // Envoi de la requête
        try {
            oos = new ObjectOutputStream(cliSock.getOutputStream());
            oos.writeObject(req);
            oos.flush();
        }
        catch (IOException e) {
            TAReponse.setText("Erreur réseau ? [" + e.getMessage() + "]");
        }
        
        // Lecture de la réponse
        ReponseTRAMAP rep = null;
        try {
            ois = new ObjectInputStream(cliSock.getInputStream());
            rep = (ReponseTRAMAP)ois.readObject();
            
            if(rep.getCode() == ReponseTRAMAP.LOGIN_OK)
                TAReponse.setText(" *** Reponse reçue : Connexion réussie");
            else if(rep.getCode() == ReponseTRAMAP.WRONG_LOGIN)
                TAReponse.setText(" *** Reponse reçue : Nom d'utilisateur ou mot de passe erroné");
            else if(rep.getCode() == ReponseTRAMAP.ALREADY_LOGGED_IN)
                TAReponse.setText(" *** Reponse reçue : Vous êtes déjà connecté");
            else if(rep.getCode() == ReponseTRAMAP.INVALID_FORMAT)
                TAReponse.setText(" *** Reponse reçue : Le format de la commande est invalide");
            else if(rep.getCode() == ReponseTRAMAP.UNKNOWN_TYPE)
                TAReponse.setText(" *** Reponse reçue : La commande est inconnue");
            else if(rep.getCode() == ReponseTRAMAP.SERVER_FAIL)
                TAReponse.setText(" *** Reponse reçue : Erreur système du serveur");
            else
                TAReponse.setText(" *** Reponse reçue : " + rep.getChargeUtile());
            
            if(rep.getCode() != ReponseTRAMAP.LOGIN_OK) {
                cliSock.close();
                cliSock = null;
            }
        }
        catch (ClassNotFoundException e) {
            TAReponse.setText("--- erreur sur la classe = " + e.getMessage());
        }
        catch (IOException e) {
            TAReponse.setText("--- erreur IO = " + e.getMessage());
        }
    }//GEN-LAST:event_BConnexionActionPerformed

    private void BDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDeconnexionActionPerformed
        
        String chargeUtile = TFUser.getText() + "  " + TFPass.getText();
        RequeteTRAMAP req = new RequeteTRAMAP(RequeteTRAMAP.LOGOUT, chargeUtile);
        
        // Envoi de la requête
        try {
            oos.writeObject(req);
            oos.flush();
        }
        catch (IOException e) {
            TAReponse.setText("Erreur réseau ? [" + e.getMessage() + "]");
        }
        
        // Lecture de la réponse
        ReponseTRAMAP rep = null;
        try {
            rep = (ReponseTRAMAP)ois.readObject();
            
            if(rep.getCode() == ReponseTRAMAP.LOGOUT_OK)
                TAReponse.setText(" *** Reponse reçue : Déconnexion réussie");
            else if(rep.getCode() == ReponseTRAMAP.WRONG_LOGIN)
                TAReponse.setText(" *** Reponse reçue : Nom d'utilisateur ou mot de passe erroné");
            else if(rep.getCode() == ReponseTRAMAP.NOT_LOGGED_IN)
                TAReponse.setText(" *** Reponse reçue : Vous n'êtes pas connecté");
            else if(rep.getCode() == ReponseTRAMAP.INVALID_FORMAT)
                TAReponse.setText(" *** Reponse reçue : Le format de la commande est invalide");
            else if(rep.getCode() == ReponseTRAMAP.UNKNOWN_TYPE)
                TAReponse.setText(" *** Reponse reçue : La commande est inconnue");
            else if(rep.getCode() == ReponseTRAMAP.SERVER_FAIL)
                TAReponse.setText(" *** Reponse reçue : Erreur système du serveur");
            else
                TAReponse.setText(" *** Reponse reçue : " + rep.getChargeUtile());
            
            if(rep.getCode() != ReponseTRAMAP.LOGOUT_OK)
                return;
        }
        catch (ClassNotFoundException e) {
            TAReponse.setText("--- erreur sur la classe = " + e.getMessage());
        }
        catch (IOException e) {
            TAReponse.setText("--- erreur IO = " + e.getMessage());
        }
        
        try {
            oos.close();
            ois.close();
            cliSock.close();
            cliSock = null;
        } catch (IOException ex) {
            TAReponse.setText("--- erreur IO = " + ex.getMessage());
        }
    }//GEN-LAST:event_BDeconnexionActionPerformed

    private void BEnvoyerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEnvoyerActionPerformed
        
        if(cliSock == null)
            return;
        
        // Construction de la requête
        String chargeUtile = "";
        RequeteTRAMAP req;
        
        switch(TPOperations.getSelectedIndex()) {
            case 0:
                int code;
                
                if(CBReservation.isSelected()) {
                    chargeUtile = TFReservation.getText() + "  ";
                    code = RequeteTRAMAP.INPUT_LORRY;
                }
                else
                    code = RequeteTRAMAP.INPUT_LORRY_WITHOUT_RESERVATION;
                chargeUtile += TFContainerA.getText() + "  " + TFTransEntrant.getText()
                        + "  " + TFDateArrivee.getText() + "  " + TFPoids.getText()
                        + "  " + TFDestination.getText() + "  " + TFContenu.getText()
                        + "  " + TFCapacite.getText() + "  " + TFDangers.getText()
                        + "  " + TFSociete.getText();
                req = new RequeteTRAMAP(code, chargeUtile);
                break;
            case 1:
                chargeUtile = TFContainerD.getText() + "  " + TFTransSortant.getText() + "  " + TFDateDepart.getText();
                req = new RequeteTRAMAP(RequeteTRAMAP.OUTPUT_CONTAINER, chargeUtile);
                break;
            case 2:
                if(RBSociete.isSelected())
                    chargeUtile = "S  " + TFDebutIntervalle.getText() + "  " + TFFinIntervalle.getText() + "  " + TFSocieteR.getText();
                else
                    chargeUtile = "D  " + TFDebutIntervalle.getText() + "  " + TFFinIntervalle.getText() + "  " + TFDestinationR.getText();
                req = new RequeteTRAMAP(RequeteTRAMAP.LIST_OPERATIONS, chargeUtile);
                break;
            case 3:
                chargeUtile = "S  " + TFIdSociete.getText() + "  " + TFNomSociete.getText() + "  " + TFEmailSociete.getText() + "  " + TFTelephoneSociete.getText() + "  " + TFAdresseSociete.getText();
                req = new RequeteTRAMAP(RequeteTRAMAP.ADD_TO_DB, chargeUtile);
                break;
            case 4:
                chargeUtile = "T  " + TFIdTransporteur.getText() + "  " + TFSocieteTransporteur.getText() + "  " + TFCapaciteTransporteur.getText() + "  " + TFCaracTechTransporteur.getText();
                req = new RequeteTRAMAP(RequeteTRAMAP.ADD_TO_DB, chargeUtile);
                break;
            case 5:
                chargeUtile = "D  " + TFIdDestination.getText() + "  " + TFVilleDestination.getText() + "  " + TFBateauDestination.getText() + "  " + TFTrainDestination.getText() + "  " + TFRouteDestination.getText();
                req = new RequeteTRAMAP(RequeteTRAMAP.ADD_TO_DB, chargeUtile);
                break;
            default:
                return;
        }
        
        // Envoi de la requête
        try {
            oos.writeObject(req);
            oos.flush();
        }
        catch (IOException e) {
            TAReponse.setText("Erreur réseau ? [" + e.getMessage() + "]");
        }
        
        // Lecture de la réponse
        ReponseTRAMAP rep = null;
        try {
            rep = (ReponseTRAMAP)ois.readObject();
            
            if(rep.getCode() == ReponseTRAMAP.INPUT_LORRY_OK)
                TAReponse.setText(" *** Reponse reçue : Container avec réservation accepté : " + rep.getChargeUtile());
            else if(rep.getCode() == ReponseTRAMAP.RESERVATION_NOT_FOUND)
                TAReponse.setText(" *** Reponse reçue : Réservation introuvable");
            else if(rep.getCode() == ReponseTRAMAP.CONTAINER_ALREADY_PRESENT)
                TAReponse.setText(" *** Reponse reçue : Le container est déjà présent dans la plateforme");
            else if(rep.getCode() == ReponseTRAMAP.INPUT_LORRY_WITHOUT_RESERVATION_OK)
                TAReponse.setText(" *** Reponse reçue : Container sans réservation accepté : " + rep.getChargeUtile());
            else if(rep.getCode() == ReponseTRAMAP.NO_SPACE_LEFT)
                TAReponse.setText(" *** Reponse reçue : Plus de place disponible");
            else if(rep.getCode() == ReponseTRAMAP.OUTPUT_CONTAINER_OK)
                TAReponse.setText(" *** Reponse reçue : Départ du container enregistré");
            else if(rep.getCode() == ReponseTRAMAP.CONTAINER_NOT_FOUND)
                TAReponse.setText(" *** Reponse reçue : Le container n'est pas présent dans la plateforme");
            else if(rep.getCode() == ReponseTRAMAP.LIST_OPERATIONS_OK) {
                TAReponse.setText(" *** Reponse reçue : Liste des mouvements reçue");
                StringTokenizer parser = new StringTokenizer(rep.getChargeUtile(), "  ");
                
                String id = null, container = null, transEntrant = null, dateArrivee = null,
                        transSortant = null, dateDepart = null,
                        poids = null, destination = null;
                
                DefaultTableModel model = (DefaultTableModel)TMouvements.getModel();
                model.setRowCount(0);
                
                while(parser.hasMoreTokens()){
                    id = parser.nextToken();
                    if(parser.hasMoreTokens())
                        container = parser.nextToken();
                    if(parser.hasMoreTokens())
                        transEntrant = parser.nextToken();
                    if(parser.hasMoreTokens())
                        dateArrivee = parser.nextToken();
                    if(parser.hasMoreTokens())
                        transSortant = parser.nextToken();
                    if(parser.hasMoreTokens())
                        dateDepart = parser.nextToken();
                    if(parser.hasMoreTokens())
                        poids = parser.nextToken();
                    if(parser.hasMoreTokens())
                        destination = parser.nextToken();
                    Object[] rowData = new Object[]{
                        id,
                        container, 
                        transEntrant, 
                        dateArrivee,
                        transSortant,
                        dateDepart,
                        poids,
                        destination
                    };
                    model.addRow(rowData);
                }
            }
            else if(rep.getCode() == ReponseTRAMAP.NO_OPS_FOUND)
                TAReponse.setText(" *** Reponse reçue : Pas d'opérations trouvées");
            else if(rep.getCode() == ReponseTRAMAP.NOT_LOGGED_IN)
                TAReponse.setText(" *** Reponse reçue : Vous n'êtes pas connecté");
            else if(rep.getCode() == ReponseTRAMAP.ADD_TO_DB_OK)
                TAReponse.setText(" *** Reponse reçue : Tuple ajouté à la base de données");
            else if(rep.getCode() == ReponseTRAMAP.SQL_ERROR)
                TAReponse.setText(" *** Reponse reçue : Erreur dans l'insertion de données dans la base de données : " + rep.getChargeUtile());
            else if(rep.getCode() == ReponseTRAMAP.INVALID_FORMAT)
                TAReponse.setText(" *** Reponse reçue : Le format de la commande est invalide");
            else if(rep.getCode() == ReponseTRAMAP.UNKNOWN_TYPE)
                TAReponse.setText(" *** Reponse reçue : La commande est inconnue");
            else if(rep.getCode() == ReponseTRAMAP.SERVER_FAIL)
                TAReponse.setText(" *** Reponse reçue : Erreur système du serveur");
            else
                TAReponse.setText(" *** Reponse reçue : " + rep.getChargeUtile());
        }
        catch (ClassNotFoundException e) {
            TAReponse.setText("--- erreur sur la classe = " + e.getMessage());
        }
        catch (IOException e) {
            TAReponse.setText("--- erreur IO = " + e.getMessage());
        }
    }//GEN-LAST:event_BEnvoyerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application_Mouvements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application_Mouvements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application_Mouvements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application_Mouvements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application_Mouvements().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BConnexion;
    private javax.swing.JButton BDeconnexion;
    private javax.swing.JButton BEnvoyer;
    private javax.swing.ButtonGroup BGRecherche;
    private javax.swing.ButtonGroup BGRequete;
    private javax.swing.JCheckBox CBReservation;
    private javax.swing.JRadioButton RBDestination;
    private javax.swing.JRadioButton RBSociete;
    private javax.swing.JTextArea TAReponse;
    private javax.swing.JTextField TFAdresse;
    private javax.swing.JTextField TFAdresseSociete;
    private javax.swing.JTextField TFBateauDestination;
    private javax.swing.JTextField TFCapacite;
    private javax.swing.JTextField TFCapaciteTransporteur;
    private javax.swing.JTextField TFCaracTechTransporteur;
    private javax.swing.JTextField TFContainerA;
    private javax.swing.JTextField TFContainerD;
    private javax.swing.JTextField TFContenu;
    private javax.swing.JTextField TFDangers;
    private javax.swing.JTextField TFDateArrivee;
    private javax.swing.JTextField TFDateDepart;
    private javax.swing.JTextField TFDebutIntervalle;
    private javax.swing.JTextField TFDestination;
    private javax.swing.JTextField TFDestinationR;
    private javax.swing.JTextField TFEmailSociete;
    private javax.swing.JTextField TFFinIntervalle;
    private javax.swing.JTextField TFIdDestination;
    private javax.swing.JTextField TFIdSociete;
    private javax.swing.JTextField TFIdTransporteur;
    private javax.swing.JTextField TFNomSociete;
    private javax.swing.JTextField TFPass;
    private javax.swing.JTextField TFPoids;
    private javax.swing.JTextField TFPort;
    private javax.swing.JTextField TFReservation;
    private javax.swing.JTextField TFRouteDestination;
    private javax.swing.JTextField TFSociete;
    private javax.swing.JTextField TFSocieteR;
    private javax.swing.JTextField TFSocieteTransporteur;
    private javax.swing.JTextField TFTelephoneSociete;
    private javax.swing.JTextField TFTrainDestination;
    private javax.swing.JTextField TFTransEntrant;
    private javax.swing.JTextField TFTransSortant;
    private javax.swing.JTextField TFUser;
    private javax.swing.JTextField TFVilleDestination;
    private javax.swing.JTable TMouvements;
    private javax.swing.JTabbedPane TPOperations;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
